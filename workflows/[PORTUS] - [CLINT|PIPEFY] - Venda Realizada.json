{
  "active": true,
  "connections": {
    "formata_dados": {
      "main": [
        [
          {
            "node": "dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "venda_clint": {
      "main": [
        [
          {
            "node": "formata_dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-27T20:37:44.420Z",
  "id": "7SxYvVSTpRkUJuhR",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PORTUS] - [CLINT|PIPEFY] - Venda Realizada",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Extraindo dados do n√≥\nconst inputData = $json[\"body\"] || {}; // Obt√©m o corpo do input de dados\n\n// Fun√ß√£o para capitalizar nomes\nfunction capitalizeName(fullName) {\n    if (!fullName || typeof fullName !== 'string') {\n        return { fname: '', lname: '', fullname: '' };\n    }\n\n    const lowerCaseWords = ['da', 'de', 'do', 'di', 'du'];\n    const words = fullName\n        .toLowerCase()\n        .split(' ')\n        .map((word, index) => {\n            if (lowerCaseWords.includes(word) && index !== 0) {\n                return word;\n            }\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        });\n\n    const fname = words.shift() || '';\n    const lname = words.join(' ');\n\n    return { fname, lname, fullname: `${fname} ${lname}`.trim() };\n}\n\n// Fun√ß√£o para formatar email\nfunction formatEmail(email) {\n    return email ? email.toLowerCase().trim() : '';\n}\n\n// Tratando telefone\nfunction formatPhone(phone) {\n    if (!phone || typeof phone !== 'string') return '';\n    \n    const telefoneLimpo = phone.replace(/\\D/g, \"\"); // Remove caracteres n√£o num√©ricos\n    const DDI = '55'; // C√≥digo do Brasil\n    const DDD = telefoneLimpo.slice(0, 2); // Primeiros dois d√≠gitos como DDD\n    const numero = telefoneLimpo.slice(-8); // √öltimos 8 d√≠gitos para o n√∫mero\n\n    // Ajusta n√∫mero final com base no DDD\n    if (parseInt(DDD) > 28) {\n        return `${DDI}${DDD}${telefoneLimpo.slice(-8)}`; // Assume 8 d√≠gitos para n√∫meros com DDD > 28\n    } else {\n        return `${DDI}${DDD}${telefoneLimpo.slice(-9)}`; // Assume 9 d√≠gitos para n√∫meros com DDD <= 28\n    }\n}\n\n// Tratamento de campos espec√≠ficos\nconst formattedNames = capitalizeName(inputData.contact_name || '');\nconst formattedEmail = formatEmail(inputData.contact_email || '');\nconst formattedPhone = formatPhone(inputData.contact_phone || '');\nconst formattedInstagram = (inputData.contact_instagram || '').replace('@', '').trim();\n\n// Construindo o objeto final com os campos tratados e mantendo todos os demais\nconst result = {\n    ...inputData, // Inclui todos os campos do input\n    fname: formattedNames.fname, // Primeiro nome formatado\n    lname: formattedNames.lname, // Sobrenome formatado\n    fullname: formattedNames.fullname, // Nome completo formatado\n    email: formattedEmail, // Email formatado\n    whatsapp: formattedPhone, // WhatsApp formatado\n    instagram: formattedInstagram, // Instagram formatado\n};\n\n// Ajustando estrutura do retorno para o n8n\nreturn [{ json: result }];\n"
      },
      "id": "e8e36bd2-2f6b-4aac-8cd3-387044d934d5",
      "name": "formata_dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        1200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "79edcf9f-8602-409f-8d04-ced41c06d16f",
              "name": "email",
              "value": "={{ $node[\"formata_dados\"].json[\"email\"] }}",
              "type": "string"
            },
            {
              "id": "93103cc7-1870-4962-bb01-59462196b4de",
              "name": "instagram",
              "value": "={{ $node[\"formata_dados\"].json[\"instagram\"] }}",
              "type": "string"
            },
            {
              "id": "866136ed-0c9b-4e19-8a6f-1e716d408e4c",
              "name": "nome_do_evento",
              "value": "Semana da Automa√ß√£o",
              "type": "string"
            },
            {
              "id": "eed1579a-31b8-4dc0-8ad5-8919857b8516",
              "name": "edicao_do_evento",
              "value": "1",
              "type": "string"
            },
            {
              "id": "9425c2f7-2c66-4df8-ba14-d8a27fcb76b4",
              "name": "tag_do_lancamento",
              "value": "SA01",
              "type": "string"
            },
            {
              "id": "3ef5466e-be29-483a-b34c-40832631f481",
              "name": "nome",
              "value": "={{ $node[\"formata_dados\"].json[\"fname\"] }}",
              "type": "string"
            },
            {
              "id": "1b675b5e-819a-47e6-b459-ca75e4ca917c",
              "name": "sobrenome",
              "value": "={{ $node[\"formata_dados\"].json[\"lname\"] }}",
              "type": "string"
            },
            {
              "id": "44dfa66b-eb7f-4e7a-8a68-73284aa32f9d",
              "name": "link_ingresso",
              "value": "={{ $node[\"venda_clint\"].json[\"body\"][\"link_ingresso\"] }}",
              "type": "string"
            },
            {
              "id": "0e3e5d7b-e09b-41f6-af22-e02f4c04a2fe",
              "name": "telefone",
              "value": "={{ $node[\"formata_dados\"].json[\"whatsapp\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f6786dcf-5392-4a9d-87fe-381ff7f0712f",
      "name": "dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1020,
        1200
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "venda_clint",
        "options": {}
      },
      "id": "cede7561-34fb-47e9-84b4-6325ca184eb8",
      "name": "venda_clint",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        660,
        1200
      ],
      "webhookId": "2a54f7b2-f74a-44a0-bceb-a879feeb9516"
    }
  ],
  "pinData": {
    "venda_clint": [
      {
        "json": {
          "headers": {
            "host": "n8nwebhookportus.automagicbots.com.br",
            "user-agent": "axios/1.7.9",
            "content-length": "1097",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "traceparent": "00-6797f18e000000004cf3c85a6e1879aa-0e37497249214c92-00",
            "tracestate": "dd=t.tid:6797f18e00000000;t.dm:-3;s:-1;p:0e37497249214c92",
            "x-datadog-parent-id": "1024368195452095634",
            "x-datadog-sampling-priority": "-1",
            "x-datadog-tags": "_dd.p.tid=6797f18e00000000",
            "x-datadog-trace-id": "5544995856942922154",
            "x-forwarded-for": "52.200.254.28",
            "x-forwarded-host": "n8nwebhookportus.automagicbots.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "d71ef73d891d",
            "x-real-ip": "52.200.254.28"
          },
          "params": {},
          "query": {},
          "body": {
            "contact_name": "Pedro Marandino - UVEPOM",
            "contact_email": "pedromarandino@gmail.com",
            "contact_phone": "+5521975097696",
            "deal_stage": "VENDA REALIZADA",
            "deal_user": "",
            "deal_status": "OPEN",
            "contact_doc": "",
            "contact_role": "",
            "contact_remuneracao": "",
            "contact_momento_atual": "",
            "contact_nome_da_empresa": "UVEPOM",
            "contact_instagram": "",
            "contact_origem_do_contato": "",
            "organization_employees": "",
            "organization_category": "",
            "organization_resumo_sobre_a_empre": "",
            "deal_produto": "",
            "deal_origem": "",
            "deal_garantia": "",
            "deal_tipo_de_contrato": "Retainer",
            "deal_valor_do_contrato": "",
            "deal_este_e_um_grupo_be": "",
            "deal_faz_parte_de_grupo": "",
            "deal_faturamento_mensal": "",
            "deal_forma_de_pagamento": "",
            "deal_ja_conhece_a_portu": "",
            "deal_qual_e_o_seu_model": "",
            "deal_quantas_pessoas_te": "",
            "deal_quantidade_de_vagas": 1,
            "deal_momento_atual": "",
            "deal_tipo_de_cliente": "Especialista Iniciante",
            "deal_orcamento_do_cliente": "6.000,00",
            "deal_qual_tipo_de_servico": "",
            "deal_üí¨_como_ficou_sabend": "",
            "deal_voce_esta_com_alguma": "",
            "deal_funil": "",
            "deal_essa_e_uma_vaga_exec": "N√ÉO",
            "deal_prazo_de_garantia": "90 dias"
          }
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "p3FaRDkYc5EoM9KR"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-28T20:26:30.559Z",
  "versionId": "c8ead4d6-519e-4ce6-b8e6-a5feb9bc979b"
}