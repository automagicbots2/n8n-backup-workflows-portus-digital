{
  "active": false,
  "connections": {
    "numeros_de_teste": {
      "main": [
        [],
        [
          {
            "node": "nao_fa√ßa_nada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evento": {
      "main": [
        [
          {
            "node": "sessao_estrategica",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar Campos Personalizados de Deals da Conta3": {
      "main": [
        [
          {
            "node": "Listar Pipelines e Status da Conta3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar Pipelines e Status da Conta3": {
      "main": [
        [
          {
            "node": "Consulta Users da Conta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Listar Campos Personalizados de Deals da Conta3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar Campos Personalizados de Contatos da Conta": {
      "main": [
        [
          {
            "node": "Listar Tags da Conta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta Users da Conta": {
      "main": [
        [
          {
            "node": "Listar Campos Personalizados de Contatos da Conta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sessao_estrategica": {
      "main": [
        [
          {
            "node": "√â Reagendamento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "aplicacao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar Tags da Conta": {
      "main": [
        [
          {
            "node": "Listar Tipos de Task da Conta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evento Criado": {
      "main": [
        [
          {
            "node": "√â Reagendamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "cancelamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "√â Reagendamento": {
      "main": [
        [
          {
            "node": "reagendamento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evento Criado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "√â Reagendamento1": {
      "main": [
        [
          {
            "node": "N√£o fa√ßa nada1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "formata_dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cancelamento": {
      "main": [
        [
          {
            "node": "formata_dados1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reagendamento": {
      "main": [
        [
          {
            "node": "formata_dados2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_dados": {
      "main": [
        [
          {
            "node": "dados_do_agendamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_dados1": {
      "main": [
        [
          {
            "node": "dados_do_cancelamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_dados2": {
      "main": [
        [
          {
            "node": "dados_do_reagendamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aplicacao": {
      "main": [
        [
          {
            "node": "√â Reagendamento2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "nada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evento Criado1": {
      "main": [
        [
          {
            "node": "√â Reagendamento3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "cancelamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "√â Reagendamento2": {
      "main": [
        [
          {
            "node": "reagendamento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evento Criado1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "√â Reagendamento3": {
      "main": [
        [
          {
            "node": "N√£o fa√ßa nada",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "formata_dados3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formata_dados3": {
      "main": [
        [
          {
            "node": "dados_do_agendamento1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_do_cancelamento": {
      "main": [
        [
          {
            "node": "entra_na_fila2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_do_agendamento": {
      "main": [
        [
          {
            "node": "entra_na_fila",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_do_reagendamento": {
      "main": [
        [
          {
            "node": "entra_na_fila1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_do_agendamento1": {
      "main": [
        [
          {
            "node": "entra_na_fila3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-04T17:45:31.165Z",
  "id": "yoctndZBNdVqh8RX",
  "meta": null,
  "name": "üìÖ‚åö[PORTUS][SE] - CALENDLY | PARTE 1",
  "nodes": [
    {
      "parameters": {},
      "id": "768d551a-faac-4037-9005-c23ee8108bd5",
      "name": "nao_fa√ßa_nada",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        760,
        1180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"payload\"][\"questions_and_responses\"][\"1_response\"] }}",
              "value2": "+55 31 98493-9743"
            },
            {
              "value1": "={{ $json[\"payload\"][\"questions_and_responses\"][\"1_response\"] }}",
              "value2": "+55 31 98571-1260"
            },
            {
              "value1": "={{ $json[\"payload\"][\"questions_and_responses\"][\"1_response\"] }}",
              "value2": "+55 71 98160-6543"
            },
            {
              "value1": "={{ $json[\"payload\"][\"questions_and_responses\"][\"1_response\"] }}",
              "value2": "+55 14 99158-8346"
            },
            {
              "value1": "={{ $json[\"payload\"][\"questions_and_responses\"][\"1_response\"] }}",
              "value2": "+55 31 99958-0682"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "1f1c92d9-02b2-4040-9b2b-5a877e289a93",
      "name": "numeros_de_teste",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        540,
        1120
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d96e5515-300a-4932-879e-a25788dd9466",
      "name": "cancelamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -20,
        1460
      ]
    },
    {
      "parameters": {
        "scope": "organization",
        "events": [
          "invitee.created",
          "invitee.canceled"
        ]
      },
      "id": "4b729bb6-4abb-4b25-a6aa-7529954fd0a0",
      "name": "Evento",
      "type": "n8n-nodes-base.calendlyTrigger",
      "typeVersion": 1,
      "position": [
        280,
        1540
      ],
      "webhookId": "2bc8e2b7-c122-40db-8fde-4b65b98f9647",
      "credentials": {
        "calendlyApi": {
          "id": "njiWYWZH6BxrNQkg",
          "name": "[Calendly] - Portus"
        }
      }
    },
    {
      "parameters": {
        "content": "## Para consulta\n\nUtilize estes Nodes para Consultar o ID dos Campos do Deal e o ID das Pipelines e Stages no ActiveCampaign",
        "height": 494.4652796495957,
        "width": 1558.7543199104232
      },
      "id": "5e0d2480-c6b2-42f9-bf97-d97fabffaca2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "url": "=https://{{ $node[\"Set\"].json[\"url_api_activecampaign\"] }}.api-us1.com/api/3/dealCustomFieldMeta",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "Api-Token",
              "value": "={{ $node[\"Set\"].json[\"Api-Token\"] }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        }
      },
      "name": "Listar Campos Personalizados de Deals da Conta3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        740,
        640
      ],
      "id": "e4026680-4490-4c15-94f5-7f03232a369e"
    },
    {
      "parameters": {
        "url": "=https://{{ $node[\"Set\"].json[\"url_api_activecampaign\"] }}.api-us1.com/api/3/dealGroups",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "Api-Token",
              "value": "={{ $node[\"Set\"].json[\"Api-Token\"] }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        }
      },
      "name": "Listar Pipelines e Status da Conta3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        960,
        640
      ],
      "id": "72ea2a03-ab5c-4047-8a77-4cb89a6e64d8"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "Api-Token"
            },
            {
              "name": "url_api_activecampaign"
            }
          ]
        },
        "options": {}
      },
      "id": "c38ca7d5-7c2c-4ab8-94e1-acf02259fa96",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        540,
        640
      ]
    },
    {
      "parameters": {
        "url": "=https://{{ $node[\"Set\"].json[\"url_api_activecampaign\"] }}.api-us1.com/api/3/users",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Api-Token",
              "value": "={{ $node[\"Set\"].json[\"Api-Token\"] }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "b8861e22-8141-4c07-ac96-0dccdc2837f8",
      "name": "Consulta Users da Conta",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1180,
        640
      ]
    },
    {
      "parameters": {
        "url": "=https://{{ $node[\"Set\"].json[\"url_api_activecampaign\"] }}.api-us1.com/api/3/tags",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "Api-Token",
              "value": "={{ $node[\"Set\"].json[\"Api-Token\"] }}"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "name": "Listar Tags da Conta",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1600,
        640
      ],
      "id": "a2164160-3440-4032-8d32-3962a9b60225"
    },
    {
      "parameters": {
        "url": "=https://{{ $node[\"Set\"].json[\"url_api_activecampaign\"] }}.api-us1.com/api/3/fields?limit=1000",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "Api-Token",
              "value": "={{ $node[\"Set\"].json[\"Api-Token\"] }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        }
      },
      "name": "Listar Campos Personalizados de Contatos da Conta",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1400,
        640
      ],
      "id": "d2dcda67-7085-4277-b6b3-cfa8ea1e5054"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"event_type\"][\"slug\"] }}",
              "value2": "xyz"
            },
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"event_type\"][\"slug\"] }}",
              "value2": "abc"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "3e5541d7-cefc-4e16-92b5-8dc1b1e7fd5d",
      "name": "eventos_permitidos",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        0,
        1080
      ]
    },
    {
      "parameters": {
        "content": "## Observa√ß√£o\n\n- Use esse node se o cliente tiver apenas alguns eventos do Calendly que devem entrar na automa√ß√£o",
        "height": 318.2284579191374,
        "width": 468.74007115902964
      },
      "id": "f5255f35-90df-460d-a647-77ec02bd4cc5",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -60,
        920
      ]
    },
    {
      "parameters": {
        "content": "## Observa√ß√£o\n\n- Use esse node para permitir que apenas alguns n√∫meros entrem na automa√ß√£o para testar",
        "height": 318.2284579191374,
        "width": 468.74007115902964
      },
      "id": "a2346c03-d2e1-4529-ae6b-cdb291abcfde",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        1000
      ]
    },
    {
      "parameters": {
        "content": "## Observa√ß√£o\n\n- Use os Nodes abaixo para armazenar JSON de execu√ß√µes de cancelamento e reagendamento para testes",
        "height": 494.97166269500354,
        "width": 468.74007115902964
      },
      "id": "516976e9-1fbd-4a0e-ba3b-6b291aee3446",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -280,
        1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"name\"] }}",
              "operation": "contains",
              "value2": "Reuni√£o Estrat√©gica Port√ºs"
            },
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"event_type\"][\"slug\"] }}",
              "operation": "contains",
              "value2": "Sess√£o"
            },
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"event_type\"][\"slug\"] }}",
              "operation": "contains",
              "value2": "Reuni√£o Estrat√©gica"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "2c00e745-f7c8-4a85-ab20-e89b5b31d2da",
      "name": "sessao_estrategica",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        460,
        1540
      ]
    },
    {
      "parameters": {
        "url": "=https://{{ $node[\"Set\"].json[\"url_api_activecampaign\"] }}.api-us1.com/api/3/dealTasktypes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Api-Token",
              "value": "={{ $node[\"Set\"].json[\"Api-Token\"] }}"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "65d83e02-766d-4e4a-8d49-01b09c14a1bd",
      "name": "Listar Tipos de Task da Conta",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1800,
        640
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "45ad4ff0-bfd4-496b-bc5b-73a095a468ae",
      "name": "agendamento",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -220,
        1460
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f71a87a7-c2f5-444a-982e-638047eb5831",
      "name": "reagendamento_evento_cancelado",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -220,
        1620
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cc516914-ec90-4310-8e39-8fd572c34adb",
      "name": "reagendamento_evento_criado",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -20,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"event\"] }}",
              "value2": "invitee.created"
            }
          ]
        }
      },
      "id": "a4144454-b49b-4583-84a7-aec997d6f77b",
      "name": "Evento Criado",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1240,
        1760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"rescheduled\"] }}",
              "value2": true
            }
          ]
        }
      },
      "id": "bc58f9e7-8ac2-42e1-9194-51df0e857b88",
      "name": "√â Reagendamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        940,
        1460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"old_invitee\"][\"is_reschedule\"] }}",
              "value2": true
            }
          ]
        }
      },
      "id": "6c658bef-80be-4ad7-ad97-9b144cbf74ce",
      "name": "√â Reagendamento1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1500,
        1580
      ]
    },
    {
      "parameters": {},
      "id": "be4d6dd0-502c-49e8-a03b-5b9f3791f0d0",
      "name": "N√£o fa√ßa nada1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1660,
        1440
      ]
    },
    {
      "parameters": {},
      "id": "165b89e7-6490-475d-bfa5-1450392a08f6",
      "name": "cancelamento",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1380,
        1900
      ]
    },
    {
      "parameters": {},
      "id": "70c60be6-e420-4fb3-b26c-3d3fcd913f0f",
      "name": "reagendamento",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1300,
        1240
      ]
    },
    {
      "parameters": {
        "queue": "Calendly - Sess√£o Estrat√©gica",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "680c0f64-69fd-45ea-91d2-5090911c8d81",
      "name": "entra_na_fila",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1,
      "position": [
        2040,
        1600
      ],
      "credentials": {
        "rabbitmq": {
          "id": "quc6gfdQpKCDLaHX",
          "name": "[RabbitMQ] - Portus"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const payload = items[0].json.payload;\n\n// Pegar o par√¢metro \"created_at\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst createdAt = new Date(payload.created_at);\nconst dataAgendamento = createdAt.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Pegar o par√¢metro \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst startTime = new Date(payload.scheduled_event.start_time);\nconst dataInicio = startTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 24 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete24h = new Date(startTime.getTime() - 24 * 60 * 60 * 1000);\nconst dataLembrete24h = lembrete24h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 2 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete2h = new Date(startTime.getTime() - 2 * 60 * 60 * 1000);\nconst dataLembrete2h = lembrete2h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Pegar o par√¢metro \"end_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst endTime = new Date(payload.scheduled_event.end_time);\nconst dataTermino = endTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\nfunction formatarData(dataString) {\n  // Extrair dia, m√™s, ano e hora da string de data\n  const [data, hora] = dataString.split(', ');\n  const [dia, mes, ano] = data.split('/');\n\n  // Criar um objeto de data\n  const dataObj = new Date(`${ano}-${mes}-${dia}T${hora}`);\n\n  // Dias da semana em portugu√™s\n  const diasDaSemana = ['Domingo', 'Segunda-feira', 'Ter√ßa-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'S√°bado'];\n\n  // Obter o dia da semana e format√°-lo\n  const diaDaSemana = diasDaSemana[dataObj.getUTCDay()];\n\n  return diaDaSemana;\n}\n// Buscar o telefone nos campos do array \"questions_and_answers\" no objeto \"invitee\" e format√°-lo\nlet telefone = $node[\"Evento\"].json[\"payload\"].text_reminder_number || $node[\"Evento\"].json[\"payload\"][\"questions_and_answers\"][\"0\"][\"answer\"] || '';\n\n// Formatar n√∫mero Internacional\nfunction formatarTelefone(telefone) {\n  const telefoneLimpo = telefone.replace(/[^\\d]/g, '');\n  let telefoneFormatado = telefoneLimpo; // Valor padr√£o se n√£o come√ßar com \"55\"\n\n  // Verificar se o telefone come√ßa com \"55\" antes de format√°-lo\n  if (telefoneLimpo.startsWith('55')) {\n    const ddi = \"55\";\n    const ddd = telefoneLimpo.slice(2, 4);\n    // Determinar o tamanho do n√∫mero baseado no DDD\n    if (parseInt(ddd, 10) > 28) {\n      telefoneFormatado = \"55\" + ddd + telefoneLimpo.slice(-8);\n    } else {\n      telefoneFormatado = \"55\" + ddd + telefoneLimpo.slice(-9);\n    }\n  } \n  // Caso n√£o comece com \"55\", o n√∫mero limpo √© retornado\n  return \"55\" + telefoneFormatado;\n}\n\n\n// Fun√ß√£o para formatar a primeira letra de cada palavra em mai√∫sculo\nfunction formatarPrimeiraLetraMaiuscula(str) {\n  const palavras = str.toLowerCase().split(\" \");\n\n  for (let i = 0; i < palavras.length; i++) {\n    palavras[i] = palavras[i].charAt(0).toUpperCase() + palavras[i].slice(1);\n  }\n\n  return palavras.join(\" \");\n}\n\n// ...\n\n// Formatar o par√¢metro \"name\" do objeto \"invitee\" com a primeira letra de cada palavra em mai√∫sculo\nconst name = formatarPrimeiraLetraMaiuscula(payload.name);\n\n// Validar se o par√¢metro \"email\" √© um email v√°lido e colocar todas as letras em min√∫sculo\nconst email = payload.email.toLowerCase();\nconst isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n\n// Retornar os resultados\nreturn {\n  'Data em que foi feito o Agendamento': dataAgendamento.replaceAll(',',''),\n  'Data de In√≠cio': dataInicio.replaceAll(',',''),\n  'Lembrete 24h': dataLembrete24h,\n  'Lembrete 2h': dataLembrete2h,\n  'Data de T√©rmino': dataTermino,\n  'Telefone': formatarTelefone(telefone),\n  'Nome': name,\n  'Email v√°lido': isEmailValid,\n  'Email': email,\n  'Dia': formatarData(dataInicio)\n};\n"
      },
      "id": "18217620-c826-43c7-a1ca-bd605c1d7e18",
      "name": "formata_dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1660,
        1600
      ]
    },
    {
      "parameters": {
        "jsCode": "const payload = items[0].json.payload;\n\n// Pegar o par√¢metro \"created_at\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst createdAt = new Date(payload.cancellation.created_at);\nconst dataCancelamento = createdAt.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Pegar o par√¢metro \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst startTime = new Date(payload.scheduled_event.start_time);\nconst dataInicio = startTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 24 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete24h = new Date(startTime.getTime() - 24 * 60 * 60 * 1000);\nconst dataLembrete24h = lembrete24h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 2 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete2h = new Date(startTime.getTime() - 2 * 60 * 60 * 1000);\nconst dataLembrete2h = lembrete2h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Pegar o par√¢metro \"end_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst endTime = new Date(payload.scheduled_event.end_time);\nconst dataTermino = endTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\nfunction formatarData(dataString) {\n  // Verificar se a data est√° no formato \"YYYY-MM-DD\"\n  const formatoNovo = /^\\d{4}-\\d{2}-\\d{2}$/;\n  const formatoAntigoComVirgula = /^\\d{2}\\/\\d{2}\\/\\d{4}, \\d{2}:\\d{2}$/;\n  const formatoAntigoSemVirgula = /^\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}$/;\n  const formatoDiaMesAnoBarra = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  const formatoDiaMesAnoHifen = /^\\d{2}-\\d{2}-\\d{4}$/;\n\n  let dataObj;\n\n  if (formatoNovo.test(dataString)) {\n    // Se a data estiver no novo formato, criar um objeto de data diretamente\n    dataObj = new Date(dataString);\n  } else if (formatoAntigoComVirgula.test(dataString)) {\n    // Se a data estiver no formato antigo com v√≠rgula, extrair os componentes e criar um objeto de data\n    const [data, hora] = dataString.split(', ');\n    const [dia, mes, ano] = data.split('/');\n    dataObj = new Date(`${ano}-${mes}-${dia}T${hora}`);\n  } else if (formatoAntigoSemVirgula.test(dataString)) {\n    // Se a data estiver no formato antigo sem v√≠rgula, extrair os componentes e criar um objeto de data\n    const [data, hora] = dataString.split(' ');\n    const [dia, mes, ano] = data.split('/');\n    dataObj = new Date(`${ano}-${mes}-${dia}T${hora}`);\n  } else if (formatoDiaMesAnoBarra.test(dataString)) {\n    // Se a data estiver no formato \"DD/MM/AAAA\", criar um objeto de data diretamente\n    dataObj = new Date(dataString);\n  } else if (formatoDiaMesAnoHifen.test(dataString)) {\n    // Se a data estiver no formato \"DD-MM-AAAA\", criar um objeto de data diretamente\n    dataObj = new Date(dataString.replace(/-/g, '/'));\n  } else {\n    // Caso contr√°rio, a data n√£o est√° em um formato reconhecido\n    return 'Formato de data n√£o reconhecido';\n  }\n\n  // Dias da semana em portugu√™s\n  const diasDaSemana = ['Domingo', 'Segunda-feira', 'Ter√ßa-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'S√°bado'];\n\n  // Obter o dia da semana e format√°-lo\n  const diaDaSemana = diasDaSemana[dataObj.getUTCDay()];\n\n  return diaDaSemana;\n}\n\n// Buscar o telefone nos campos do array \"questions_and_answers\" no objeto \"invitee\" e format√°-lo\nlet telefone = $node[\"Evento\"].json[\"payload\"][\"text_reminder_number\"] || $node[\"Evento\"].json[\"payload\"][\"questions_and_answers\"][\"0\"][\"answer\"] || '';\n\n//Formatar n√∫mero Internacional\nfunction formatarTelefone(telefone) {\n  const telefoneLimpo = telefone.replace(/[^\\d]/g, '');\n\n  let ddi;\n  let ddd;\n  let telefoneFormatado;\n\n  // Verificar se o telefone come√ßa com \"55\" antes de format√°-lo\n  if (telefoneLimpo.startsWith('55')) {\n    ddi = telefoneLimpo.slice(0, 2);\n    ddd = telefoneLimpo.slice(2, 4);\n    if (parseInt(ddd, 10) > 28) {\n      telefoneFormatado = ddi + ddd + telefoneLimpo.slice(-8);\n    } else {\n      telefoneFormatado = \"55\" + ddd + telefoneLimpo.slice(-9);\n    }\n  } else {\n    // Se o DDI for diferente de 55, manter o n√∫mero como est√°\n    telefoneFormatado = telefoneLimpo;\n  }\n\n  return \"55\" + telefoneFormatado;\n}\n\n// Fun√ß√£o para formatar a primeira letra de cada palavra em mai√∫sculo\nfunction formatarPrimeiraLetraMaiuscula(str) {\n  const palavras = str.toLowerCase().split(\" \");\n\n  for (let i = 0; i < palavras.length; i++) {\n    palavras[i] = palavras[i].charAt(0).toUpperCase() + palavras[i].slice(1);\n  }\n\n  return palavras.join(\" \");\n}\n\n// ...\nconst dia = $node[\"Evento\"].json[\"payload\"][\"created_at\"].split('T')[0].replace(',','') || '';\n// Formatar o par√¢metro \"name\" do objeto \"invitee\" com a primeira letra de cada palavra em mai√∫sculo\nconst name = formatarPrimeiraLetraMaiuscula(payload.name);\n\n// Validar se o par√¢metro \"email\" √© um email v√°lido e colocar todas as letras em min√∫sculo\nconst email = payload.email.toLowerCase();\nconst isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n\n// Retornar os resultados\nreturn {\n  'Data do Cancelamento': dataCancelamento.replaceAll(',',''),\n  'Telefone': formatarTelefone(telefone),\n  'Nome': name,\n  'Email v√°lido': isEmailValid,\n  'Email': email,\n  'Dia': formatarData(dia)\n};\n"
      },
      "id": "be570806-4300-4641-8d00-759685ff2e28",
      "name": "formata_dados1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1540,
        1900
      ]
    },
    {
      "parameters": {
        "jsCode": "const payload = items[0].json.payload;\n\n// Pegar o par√¢metro \"created_at\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst createdAt = new Date(payload.scheduled_event.cancellation.created_at);\nconst dataAgendamento = createdAt.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n//Trazer dia extenso via data\nfunction formatarData(dataString) {\n  // Extrair dia, m√™s, ano e hora da string de data\n  const [data, hora] = dataString.split(', ');\n  const [dia, mes, ano] = data.split('/');\n\n  // Criar um objeto de data\n  const dataObj = new Date(`${ano}-${mes}-${dia}T${hora}`);\n\n  // Dias da semana em portugu√™s\n  const diasDaSemana = ['Domingo', 'Segunda-feira', 'Ter√ßa-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'S√°bado'];\n\n  // Obter o dia da semana e format√°-lo\n  const diaDaSemana = diasDaSemana[dataObj.getUTCDay()];\n\n  return diaDaSemana;\n}\n\n// Pegar o par√¢metro \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst startTime = new Date(payload.scheduled_event.start_time);\nconst dataInicio = startTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 24 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete24h = new Date(startTime.getTime() - 24 * 60 * 60 * 1000);\nconst dataLembrete24h = lembrete24h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 2 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete2h = new Date(startTime.getTime() - 2 * 60 * 60 * 1000);\nconst dataLembrete2h = lembrete2h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Pegar o par√¢metro \"end_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst endTime = new Date(payload.scheduled_event.end_time);\nconst dataTermino = endTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Buscar o telefone nos campos do array \"questions_and_answers\" no objeto \"invitee\" e format√°-lo\nlet telefone = $node[\"Evento\"].json[\"payload\"][\"text_reminder_number\"] || $node[\"Evento\"].json[\"payload\"][\"questions_and_answers\"][\"0\"][\"answer\"] || '';\n\n//Formatar n√∫mero Internacional\nfunction formatarTelefone(telefone) {\n  const telefoneLimpo = telefone.replace(/[^\\d]/g, '');\n\n  let ddi;\n  let ddd;\n  let telefoneFormatado;\n\n  // Verificar se o telefone come√ßa com \"55\" antes de format√°-lo\n  if (telefoneLimpo.startsWith('55')) {\n    ddi = telefoneLimpo.slice(0, 2);\n    ddd = telefoneLimpo.slice(2, 4);\n    if (parseInt(ddd, 10) > 28) {\n      telefoneFormatado = ddi + ddd + telefoneLimpo.slice(-8);\n    } else {\n      telefoneFormatado = ddi + ddd + telefoneLimpo.slice(-9);\n    }\n  } else {\n    // Se o DDI for diferente de 55, manter o n√∫mero como est√°\n    telefoneFormatado = telefoneLimpo;\n  }\n\n  return \"55\" + telefoneFormatado;\n}\n\n// Fun√ß√£o para formatar a primeira letra de cada palavra em mai√∫sculo\nfunction formatarPrimeiraLetraMaiuscula(str) {\n  const palavras = str.toLowerCase().split(\" \");\n\n  for (let i = 0; i < palavras.length; i++) {\n    palavras[i] = palavras[i].charAt(0).toUpperCase() + palavras[i].slice(1);\n  }\n\n  return palavras.join(\" \");\n}\n\n// Pegar o par√¢metro \"created_at\" e converter para o formato YYYY-MM-DD\nconst newCreatedAt = new Date(payload.scheduled_event.cancellation.created_at);\nconst newDataAgendamento = newCreatedAt.toISOString().slice(0, 10);\n\n// Pegar o par√¢metro \"start_time\" e converter para o formato YYYY-MM-DD\nconst newStartTime = new Date(payload.scheduled_event.end_time);\nconst newDataInicio = newStartTime.toISOString().split('T')[0];\n\n// Formatar o par√¢metro \"name\" do objeto \"invitee\" com a primeira letra de cada palavra em mai√∫sculo\nconst name = formatarPrimeiraLetraMaiuscula(payload.name);\n\n// Validar se o par√¢metro \"email\" √© um email v√°lido e colocar todas as letras em min√∫sculo\nconst email = payload.email.toLowerCase();\nconst isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n\n// Retornar os resultados\nreturn {\n  'Data em que foi feito o Reagendamento': dataAgendamento.replaceAll(',',''),\n  'Data de In√≠cio': dataInicio.replaceAll(',',''),\n  'Lembrete 24h': dataLembrete24h,\n  'Lembrete 2h': dataLembrete2h,\n  'Data de T√©rmino': dataTermino.replaceAll(',',''),\n  'Telefone': formatarTelefone(telefone),\n  'Nome': name,\n  'Email v√°lido': isEmailValid,\n  'Email': email,\n  'data_final_evento_novo': newDataInicio.replaceAll(',',''),\n  'data_agendamento_evento_novo': newDataAgendamento.replaceAll(',',''),\n  \"Dia\": formatarData(dataInicio)\n};\n"
      },
      "id": "d4b5b7ba-4aad-4cf6-be06-96bf21a9816c",
      "name": "formata_dados2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1480,
        1240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"name\"] }}",
              "operation": "contains",
              "value2": "Aplica"
            }
          ]
        }
      },
      "id": "0955c003-2804-41f2-b8e0-19efd24fa1ed",
      "name": "aplicacao",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        700,
        1700
      ]
    },
    {
      "parameters": {
        "queue": "Calendly - Reagendamentos",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "fd4e0867-fc58-4859-af9a-2ba5b5980464",
      "name": "entra_na_fila1",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1,
      "position": [
        1860,
        1240
      ],
      "credentials": {
        "rabbitmq": {
          "id": "quc6gfdQpKCDLaHX",
          "name": "[RabbitMQ] - Portus"
        }
      }
    },
    {
      "parameters": {
        "queue": "Calendly - Cancelamentos",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "727e8400-2a28-47b4-8866-edf9e979d692",
      "name": "entra_na_fila2",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1,
      "position": [
        1900,
        1900
      ],
      "credentials": {
        "rabbitmq": {
          "id": "quc6gfdQpKCDLaHX",
          "name": "[RabbitMQ] - Portus"
        }
      }
    },
    {
      "parameters": {},
      "id": "fa7a8a95-8e1c-4fd4-b321-8bbd6e23c1c3",
      "name": "nada",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        820,
        1900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"event\"] }}",
              "value2": "invitee.created"
            }
          ]
        }
      },
      "id": "02dcf98d-6a47-4972-9df3-9e5c04ce8d37",
      "name": "Evento Criado1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1060,
        2000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"rescheduled\"] }}",
              "value2": true
            }
          ]
        }
      },
      "id": "5736cb91-11b2-4ad2-8de2-de65feb987eb",
      "name": "√â Reagendamento2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        920,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $node[\"Evento\"].json[\"payload\"][\"rescheduled\"] }}",
              "value2": true
            }
          ]
        }
      },
      "id": "0c81ce87-d4a1-4b6b-8746-994fce9eac73",
      "name": "√â Reagendamento3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1300,
        2160
      ]
    },
    {
      "parameters": {},
      "id": "408d77bb-fb7e-483e-8d86-6cb20463cc2c",
      "name": "N√£o fa√ßa nada",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1520,
        2060
      ]
    },
    {
      "parameters": {
        "queue": "Calendly - Aplica√ß√£o Direta",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "7e490cb5-ea7c-4285-acb6-08ecf27b72ba",
      "name": "entra_na_fila3",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1,
      "position": [
        1900,
        2240
      ],
      "credentials": {
        "rabbitmq": {
          "id": "quc6gfdQpKCDLaHX",
          "name": "[RabbitMQ] - Portus"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const payload = items[0].json.payload;\n\n// Pegar o par√¢metro \"created_at\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst createdAt = new Date(payload.created_at);\nconst dataAgendamento = createdAt.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Pegar o par√¢metro \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst startTime = new Date(payload.scheduled_event.start_time);\nconst dataInicio = startTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 24 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete24h = new Date(startTime.getTime() - 24 * 60 * 60 * 1000);\nconst dataLembrete24h = lembrete24h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Subtrair 2 horas do \"start_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst lembrete2h = new Date(startTime.getTime() - 2 * 60 * 60 * 1000);\nconst dataLembrete2h = lembrete2h.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\n// Pegar o par√¢metro \"end_time\" e converter para o formato DD/MM/YYYY HH:mm no fuso hor√°rio de S√£o Paulo\nconst endTime = new Date(payload.scheduled_event.end_time);\nconst dataTermino = endTime.toLocaleString('pt-BR', {\n  timeZone: 'America/Sao_Paulo',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\nfunction formatarData(dataString) {\n  // Extrair dia, m√™s, ano e hora da string de data\n  const [data, hora] = dataString.split(', ');\n  const [dia, mes, ano] = data.split('/');\n\n  // Criar um objeto de data\n  const dataObj = new Date(`${ano}-${mes}-${dia}T${hora}`);\n\n  // Dias da semana em portugu√™s\n  const diasDaSemana = ['Domingo', 'Segunda-feira', 'Ter√ßa-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'S√°bado'];\n\n  // Obter o dia da semana e format√°-lo\n  const diaDaSemana = diasDaSemana[dataObj.getUTCDay()];\n\n  return diaDaSemana;\n}\n// Buscar o telefone nos campos do array \"questions_and_answers\" no objeto \"invitee\" e format√°-lo\nlet telefone = $node[\"Evento\"].json[\"payload\"].text_reminder_number || $node[\"Evento\"].json[\"payload\"][\"questions_and_answers\"][\"0\"][\"answer\"] || '';\n\n//Formatar n√∫mero Internacional\nfunction formatarTelefone(telefone) {\n  const telefoneLimpo = telefone.replace(/[^\\d]/g, '');\n\n  let ddi;\n  let ddd;\n  let telefoneFormatado;\n\n  // Verificar se o telefone come√ßa com \"55\" antes de format√°-lo\n  if (telefoneLimpo.startsWith('55')) {\n    ddi = telefoneLimpo.slice(0, 2);\n    ddd = telefoneLimpo.slice(2, 4);\n    if (parseInt(ddd, 10) > 28) {\n      telefoneFormatado = ddi + ddd + telefoneLimpo.slice(-8);\n    } else {\n      telefoneFormatado = ddi + ddd + telefoneLimpo.slice(-9);\n    }\n  } else {\n    // Se o DDI for diferente de 55, manter o n√∫mero como est√°\n    telefoneFormatado = telefoneLimpo;\n  }\n\n  return \"55\" + telefoneFormatado;\n}\n\n// Fun√ß√£o para formatar a primeira letra de cada palavra em mai√∫sculo\nfunction formatarPrimeiraLetraMaiuscula(str) {\n  const palavras = str.toLowerCase().split(\" \");\n\n  for (let i = 0; i < palavras.length; i++) {\n    palavras[i] = palavras[i].charAt(0).toUpperCase() + palavras[i].slice(1);\n  }\n\n  return palavras.join(\" \");\n}\n\n// ...\n\n// Formatar o par√¢metro \"name\" do objeto \"invitee\" com a primeira letra de cada palavra em mai√∫sculo\nconst name = formatarPrimeiraLetraMaiuscula(payload.name);\n\n// Validar se o par√¢metro \"email\" √© um email v√°lido e colocar todas as letras em min√∫sculo\nconst email = payload.email.toLowerCase();\nconst isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n\n// Retornar os resultados\nreturn {\n  'Data em que foi feito o Agendamento': dataAgendamento,\n  'Data de In√≠cio': dataInicio.replaceAll(',',''),\n  'Lembrete 24h': dataLembrete24h,\n  'Lembrete 2h': dataLembrete2h,\n  'Data de T√©rmino': dataTermino.replaceAll(',',''),\n  'Telefone': formatarTelefone(telefone),\n  'Nome': name,\n  'Email v√°lido': isEmailValid,\n  'Email': email,\n  'Dia': formatarData(dataInicio)\n};\n"
      },
      "id": "4b74519a-778c-48b5-9386-fc3e6917aa1c",
      "name": "formata_dados3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1520,
        2240
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Nome do Cliente",
              "value": "={{ $node[\"formata_dados1\"].json[\"Nome\"] }}"
            },
            {
              "name": "E-mail do Cliente",
              "value": "={{ $node[\"formata_dados1\"].json[\"Email\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato BC",
              "value": "={{ $node[\"formata_dados1\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato Z-API",
              "value": "={{ $node[\"formata_dados1\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Tipo de Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"name\"] }}"
            },
            {
              "name": "ID do Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"event\"].split('/')[4] }}"
            },
            {
              "name": "Data do Cancelamento",
              "value": "={{ $node[\"formata_dados1\"].json[\"Data do Cancelamento\"] }}"
            },
            {
              "name": "E-mail do Respons√°vel",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "Data em que foi feito o Agendamento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"created_at\"].split('T')[0].replace(',','') }}"
            },
            {
              "name": "Data de T√©rmino",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"end_time\"].split('T')[0].replace(',','') }}"
            },
            {
              "name": "Data de In√≠cio",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"created_at\"].split('T')[0].replace(',','') }}"
            },
            {
              "name": "Link da Reuni√£o",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"location\"][\"join_url\"] }}"
            },
            {
              "name": "utm_source",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_source\"] }}"
            },
            {
              "name": "utm_campaign",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_campaign\"] }}"
            },
            {
              "name": "utm_term",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_term\"] }}"
            },
            {
              "name": "utm_medium",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_medium\"] }}"
            },
            {
              "name": "utm_content",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_content\"] }}"
            },
            {
              "name": "ID do Cliente",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"cancel_url\"] === '' ? $node[\"Evento\"].json[\"cancel_url\"].split('/')[4] :\n$node[\"Evento\"].json[\"payload\"][\"cancel_url\"].split('/')[4]}}"
            },
            {
              "name": "id_do_campo_id_do_agendamento_bot_conversa"
            },
            {
              "name": "fluxo_de_confirmacao_de_cancelamento"
            },
            {
              "name": "API-KEY"
            },
            {
              "name": "id_do_campo_link_da_reuniao_bot_conversa",
              "value": "2370600"
            },
            {
              "name": "id_do_campo_dia_da_semana_do_agendamento_bot_conversa"
            },
            {
              "name": "id_do_campo_data_do_agendamento_bot_conversa",
              "value": "2371397"
            },
            {
              "name": "id_do_campo_horario_agendado_bot_conversa"
            },
            {
              "name": "id_do_campo_id_banco_de_dados_bot_conversa"
            },
            {
              "name": "id_do_campo_idleadac_bot_conversa"
            },
            {
              "name": "id_do_campo_iddealac_bot_conversa"
            },
            {
              "name": "id_campo_id_banco_de_dados_ac"
            },
            {
              "name": "valor_produto_principal_em_centavos"
            },
            {
              "name": "id_stage_agendou_reuniao_ac"
            },
            {
              "name": "funil",
              "value": "={{$node[\"√â Reagendamento\"].runIndex >= 0 ? ('sessao_estrategica') :  $node[\"√â Reagendamento2\"].runIndex >= 0 ? ('aplicacao_direta') : \"\"}}"
            },
            {
              "name": "variacao_do_funil",
              "value": "v1"
            },
            {
              "name": "id_pipeline_se_ac"
            },
            {
              "name": "id_sdr",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "url_api_activecampaign"
            },
            {
              "name": "id_campo_link_de_cancelamento_ac"
            },
            {
              "name": "id_campo_link_de_reagendamento_ac"
            },
            {
              "name": "id_campo_id_do_cliente_ac"
            },
            {
              "name": "id_campo_dia_semana_agendamento_ac"
            },
            {
              "name": "id_campo_data_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_termino_ac"
            },
            {
              "name": "id_campo_data_de_termino_ac"
            },
            {
              "name": "id_campo_email_do_responsavel_ac"
            },
            {
              "name": "id_campo_data_do_agendamento_ac"
            },
            {
              "name": "id_campo_link_da_reuniao_ac"
            },
            {
              "name": "id_campo_tipo_de_evento_ac"
            },
            {
              "name": "id_campo_id_do_evento_ac"
            },
            {
              "name": "id_campo_utm_source_ac"
            },
            {
              "name": "id_campo_utm_campaign_ac"
            },
            {
              "name": "id_campo_utm_term_ac"
            },
            {
              "name": "id_campo_utm_medium_ac"
            },
            {
              "name": "id_campo_utm_content_ac"
            },
            {
              "name": "id_campo_utm_fun_ac"
            },
            {
              "name": "id_campo_utm_var_ac"
            },
            {
              "name": "id_do_campo_id_do_cliente_bot_conversa"
            },
            {
              "name": "id_task_reuniao_ac"
            },
            {
              "name": "id_do_campo_motivo_do_cancelamento_bot_conversa"
            },
            {
              "name": "Motivo do Cancelamento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"event\"][\"cancel_reason\"] ? $node[\"Evento\"].json[\"payload\"][\"event\"][\"cancel_reason\"] : $node[\"Evento\"].json[\"payload\"][\"cancellation\"][\"reason\"] }}"
            },
            {
              "name": "Dia da Semana do Evento",
              "value": "={{ $node[\"formata_dados1\"].json[\"Dia\"] }}"
            },
            {
              "name": "data_agendamento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"created_at\"].split('T')[0].replace(',','') }} "
            },
            {
              "name": "id_do_campo_data_cancelamento_bot_conversa"
            }
          ]
        },
        "options": {}
      },
      "id": "db42def8-33bb-4531-ac9b-36dc751b50ee",
      "name": "dados_do_cancelamento",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1720,
        1900
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Nome do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"Nome\"] }}"
            },
            {
              "name": "E-mail do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"Email\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato BC",
              "value": "={{ $node[\"formata_dados\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato Z-API",
              "value": "={{ $node[\"formata_dados\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Tipo de Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"name\"] }}"
            },
            {
              "name": "ID do Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"event\"].split('/')[4] }}"
            },
            {
              "name": "Respons√°vel pelo Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_name\"] }}"
            },
            {
              "name": "E-mail do Respons√°vel",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "Data de In√≠cio",
              "value": "={{ $node[\"formata_dados\"].json[\"Data de In√≠cio\"] }}"
            },
            {
              "name": "Data em que foi feito o Agendamento",
              "value": "={{ $node[\"formata_dados\"].json[\"Data em que foi feito o Agendamento\"] }}"
            },
            {
              "name": "Data de T√©rmino",
              "value": "={{ $node[\"formata_dados\"].json[\"Data de T√©rmino\"] }}"
            },
            {
              "name": "Dia da Semana de In√≠cio do Evento",
              "value": "={{ $node[\"formata_dados\"].json[\"Dia\"] }}"
            },
            {
              "name": "Link da Reuni√£o",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"location\"][\"join_url\"] }}"
            },
            {
              "name": "utm_source",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_source\"] }}"
            },
            {
              "name": "utm_campaign",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_campaign\"] }}"
            },
            {
              "name": "utm_term",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_term\"] }}"
            },
            {
              "name": "utm_medium",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_medium\"] }}"
            },
            {
              "name": "utm_content",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_content\"] }}"
            },
            {
              "name": "ID do Cliente",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"cancel_url\"].split('/')[4] }}"
            },
            {
              "name": "id_do_campo_id_do_agendamento_bot_conversa"
            },
            {
              "name": "fluxo_de_confirmacao_de_agendamento"
            },
            {
              "name": "API-KEY"
            },
            {
              "name": "id_do_campo_link_da_reuniao_bot_conversa",
              "value": "2370600"
            },
            {
              "name": "id_do_campo_dia_da_semana_do_agendamento_bot_conversa"
            },
            {
              "name": "id_do_campo_data_do_agendamento_bot_conversa",
              "value": "2371397"
            },
            {
              "name": "id_do_campo_horario_agendado_bot_conversa"
            },
            {
              "name": "id_do_campo_id_banco_de_dados_bot_conversa"
            },
            {
              "name": "id_do_campo_idleadac_bot_conversa"
            },
            {
              "name": "id_do_campo_iddealac_bot_conversa"
            },
            {
              "name": "id_campo_id_banco_de_dados_ac"
            },
            {
              "name": "valor_produto_principal_em_centavos"
            },
            {
              "name": "id_stage_agendou_reuniao_ac"
            },
            {
              "name": "funil",
              "value": "sessao_estrategica"
            },
            {
              "name": "variacao_do_funil",
              "value": "v1"
            },
            {
              "name": "id_pipeline_se_ac"
            },
            {
              "name": "id_sdr",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "url_api_activecampaign"
            },
            {
              "name": "id_campo_link_de_cancelamento_ac"
            },
            {
              "name": "id_campo_link_de_reagendamento_ac"
            },
            {
              "name": "id_campo_id_do_cliente_ac"
            },
            {
              "name": "id_campo_dia_semana_agendamento_ac"
            },
            {
              "name": "id_campo_data_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_termino_ac"
            },
            {
              "name": "id_campo_data_de_termino_ac"
            },
            {
              "name": "id_campo_email_do_responsavel_ac"
            },
            {
              "name": "id_campo_data_do_agendamento_ac"
            },
            {
              "name": "id_campo_link_da_reuniao_ac"
            },
            {
              "name": "id_campo_tipo_de_evento_ac"
            },
            {
              "name": "id_campo_id_do_evento_ac"
            },
            {
              "name": "id_campo_utm_source_ac"
            },
            {
              "name": "id_campo_utm_campaign_ac"
            },
            {
              "name": "id_campo_utm_term_ac"
            },
            {
              "name": "id_campo_utm_medium_ac"
            },
            {
              "name": "id_campo_utm_content_ac"
            },
            {
              "name": "id_campo_utm_fun_ac"
            },
            {
              "name": "id_campo_utm_var_ac"
            },
            {
              "name": "id_do_campo_id_do_cliente_bot_conversa"
            },
            {
              "name": "id_task_reuniao_ac"
            }
          ]
        },
        "options": {}
      },
      "id": "5727ef50-aff2-4734-9103-4662f22d1803",
      "name": "dados_do_agendamento",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1840,
        1600
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Nome do Cliente",
              "value": "={{ $node[\"formata_dados2\"].json[\"Nome\"] }}"
            },
            {
              "name": "E-mail do Cliente",
              "value": "={{ $node[\"formata_dados2\"].json[\"Email\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato BC",
              "value": "={{ $node[\"formata_dados2\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato Z-API",
              "value": "={{ $node[\"formata_dados2\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Tipo de Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"name\"] }}"
            },
            {
              "name": "ID do Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"new_invitee\"].split('/')[4] }}"
            },
            {
              "name": "Respons√°vel pelo Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_name\"] }}"
            },
            {
              "name": "E-mail do Respons√°vel",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "Data do Agendamento Antigo",
              "value": "={{ $node[\"formata_dados2\"].json[\"Data de In√≠cio\"] }}"
            },
            {
              "name": "Data em que foi feito o Reagendamento",
              "value": "={{ $node[\"formata_dados2\"].json[\"Data em que foi feito o Reagendamento\"] }}"
            },
            {
              "name": "Data de T√©rmino",
              "value": "={{ $node[\"formata_dados2\"].json[\"Data de T√©rmino\"] }}"
            },
            {
              "name": "Dia da Semana de In√≠cio do Evento",
              "value": "={{$node[\"formata_dados2\"].json[\"Dia\"]}}"
            },
            {
              "name": "Link da Reuni√£o Antigo",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"location\"][\"join_url\"] }}"
            },
            {
              "name": "utm_source",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_source\"] }}"
            },
            {
              "name": "utm_campaign",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_campaign\"] }}"
            },
            {
              "name": "utm_term",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_term\"] }}"
            },
            {
              "name": "utm_medium",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_medium\"] }}"
            },
            {
              "name": "utm_content",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_content\"] }}"
            },
            {
              "name": "ID do Cliente",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"cancel_url\"].split('/')[4] }}"
            },
            {
              "name": "id_do_campo_id_do_agendamento_bot_conversa"
            },
            {
              "name": "fluxo_de_confirmacao_de_reagendamento"
            },
            {
              "name": "API-KEY"
            },
            {
              "name": "id_do_campo_link_da_reuniao_bot_conversa",
              "value": "2370600"
            },
            {
              "name": "id_do_campo_dia_da_semana_do_agendamento_bot_conversa"
            },
            {
              "name": "id_do_campo_data_do_agendamento_bot_conversa",
              "value": "2371397"
            },
            {
              "name": "id_do_campo_horario_agendado_bot_conversa"
            },
            {
              "name": "id_do_campo_id_banco_de_dados_bot_conversa"
            },
            {
              "name": "id_do_campo_idleadac_bot_conversa"
            },
            {
              "name": "id_do_campo_iddealac_bot_conversa"
            },
            {
              "name": "id_campo_id_banco_de_dados_ac"
            },
            {
              "name": "valor_produto_principal_em_centavos"
            },
            {
              "name": "id_stage_agendou_reuniao_ac"
            },
            {
              "name": "funil",
              "value": "={{$node[\"√â Reagendamento\"].runIndex >= 0 ? ('sessao_estrategica') : \n$node[\"√â Reagendamento2\"].runIndex >= 0 ? ('aplicacao_direta') : \"\"}}"
            },
            {
              "name": "variacao_do_funil",
              "value": "v1"
            },
            {
              "name": "id_pipeline_se_ac"
            },
            {
              "name": "id_sdr",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "url_api_activecampaign"
            },
            {
              "name": "id_campo_link_de_cancelamento_ac"
            },
            {
              "name": "id_campo_link_de_reagendamento_ac"
            },
            {
              "name": "id_campo_id_do_cliente_ac"
            },
            {
              "name": "id_campo_dia_semana_agendamento_ac"
            },
            {
              "name": "id_campo_data_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_termino_ac"
            },
            {
              "name": "id_campo_data_de_termino_ac"
            },
            {
              "name": "id_campo_email_do_responsavel_ac"
            },
            {
              "name": "id_campo_data_do_agendamento_ac"
            },
            {
              "name": "id_campo_link_da_reuniao_ac"
            },
            {
              "name": "id_campo_tipo_de_evento_ac"
            },
            {
              "name": "id_campo_id_do_evento_ac"
            },
            {
              "name": "id_campo_utm_source_ac"
            },
            {
              "name": "id_campo_utm_campaign_ac"
            },
            {
              "name": "id_campo_utm_term_ac"
            },
            {
              "name": "id_campo_utm_medium_ac"
            },
            {
              "name": "id_campo_utm_content_ac"
            },
            {
              "name": "id_campo_utm_fun_ac"
            },
            {
              "name": "id_campo_utm_var_ac"
            },
            {
              "name": "id_do_campo_id_do_cliente_bot_conversa"
            },
            {
              "name": "id_task_reuniao_ac"
            },
            {
              "name": "Motivo do Reagendamento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"event\"][\"cancel_reason\"] ? $node[\"Evento\"].json[\"payload\"][\"event\"][\"cancel_reason\"] : $node[\"Evento\"].json[\"payload\"][\"cancellation\"][\"reason\"] }}"
            },
            {
              "name": "ID do Evento Antigo",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"event\"].split('/')[4] }}"
            },
            {
              "name": "Data de In√≠cio",
              "value": "={{ $node[\"formata_dados2\"].json[\"Data de In√≠cio\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8f661df8-aadd-44ef-b117-6e531a4c8f3d",
      "name": "dados_do_reagendamento",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1660,
        1240
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Nome do Cliente",
              "value": "={{ $node[\"formata_dados3\"].json[\"Nome\"] }}"
            },
            {
              "name": "E-mail do Cliente",
              "value": "={{ $node[\"formata_dados3\"].json[\"Email\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato BC",
              "value": "={{ $node[\"formata_dados3\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato Z-API",
              "value": "={{ $node[\"formata_dados3\"].json[\"Telefone\"] }}"
            },
            {
              "name": "Tipo de Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"name\"] }}"
            },
            {
              "name": "ID do Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"event\"].split('/')[4] }}"
            },
            {
              "name": "Respons√°vel pelo Evento",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_name\"] }}"
            },
            {
              "name": "E-mail do Respons√°vel",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "Data de In√≠cio",
              "value": "={{ $node[\"formata_dados3\"].json[\"Data de In√≠cio\"] }}"
            },
            {
              "name": "Data em que foi feito o Agendamento",
              "value": "={{ $node[\"formata_dados3\"].json[\"Data em que foi feito o Agendamento\"] }}"
            },
            {
              "name": "Data de T√©rmino",
              "value": "={{ $node[\"formata_dados3\"].json[\"Data de T√©rmino\"] }}"
            },
            {
              "name": "Dia da Semana de In√≠cio do Evento",
              "value": "={{ $node[\"formata_dados3\"].json[\"Dia\"] }}"
            },
            {
              "name": "Link da Reuni√£o",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"location\"][\"join_url\"] }}"
            },
            {
              "name": "utm_source",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_source\"] }}"
            },
            {
              "name": "utm_campaign",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_campaign\"] }}"
            },
            {
              "name": "utm_term",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_term\"] }}"
            },
            {
              "name": "utm_medium",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_medium\"] }}"
            },
            {
              "name": "utm_content",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"tracking\"][\"utm_content\"] }}"
            },
            {
              "name": "ID do Cliente",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"cancel_url\"].split('/')[4] }}"
            },
            {
              "name": "id_do_campo_id_do_agendamento_bot_conversa"
            },
            {
              "name": "fluxo_de_confirmacao_de_agendamento"
            },
            {
              "name": "API-KEY"
            },
            {
              "name": "id_do_campo_link_da_reuniao_bot_conversa",
              "value": "2370600"
            },
            {
              "name": "id_do_campo_dia_da_semana_do_agendamento_bot_conversa"
            },
            {
              "name": "id_do_campo_data_do_agendamento_bot_conversa",
              "value": "2371397"
            },
            {
              "name": "id_do_campo_horario_agendado_bot_conversa"
            },
            {
              "name": "id_do_campo_id_banco_de_dados_bot_conversa"
            },
            {
              "name": "id_do_campo_idleadac_bot_conversa"
            },
            {
              "name": "id_do_campo_iddealac_bot_conversa"
            },
            {
              "name": "id_campo_id_banco_de_dados_ac"
            },
            {
              "name": "valor_produto_principal_em_centavos"
            },
            {
              "name": "id_stage_agendou_reuniao_ac"
            },
            {
              "name": "funil",
              "value": "sessao_estrategica"
            },
            {
              "name": "variacao_do_funil",
              "value": "v1"
            },
            {
              "name": "id_pipeline_se_ac"
            },
            {
              "name": "id_sdr",
              "value": "={{ $node[\"Evento\"].json[\"payload\"][\"scheduled_event\"][\"event_memberships\"][\"0\"][\"user_email\"] }}"
            },
            {
              "name": "url_api_activecampaign"
            },
            {
              "name": "id_campo_link_de_cancelamento_ac"
            },
            {
              "name": "id_campo_link_de_reagendamento_ac"
            },
            {
              "name": "id_campo_id_do_cliente_ac"
            },
            {
              "name": "id_campo_dia_semana_agendamento_ac"
            },
            {
              "name": "id_campo_data_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_inicio_ac"
            },
            {
              "name": "id_campo_data_e_hora_de_termino_ac"
            },
            {
              "name": "id_campo_data_de_termino_ac"
            },
            {
              "name": "id_campo_email_do_responsavel_ac"
            },
            {
              "name": "id_campo_data_do_agendamento_ac"
            },
            {
              "name": "id_campo_link_da_reuniao_ac"
            },
            {
              "name": "id_campo_tipo_de_evento_ac"
            },
            {
              "name": "id_campo_id_do_evento_ac"
            },
            {
              "name": "id_campo_utm_source_ac"
            },
            {
              "name": "id_campo_utm_campaign_ac"
            },
            {
              "name": "id_campo_utm_term_ac"
            },
            {
              "name": "id_campo_utm_medium_ac"
            },
            {
              "name": "id_campo_utm_content_ac"
            },
            {
              "name": "id_campo_utm_fun_ac"
            },
            {
              "name": "id_campo_utm_var_ac"
            },
            {
              "name": "id_do_campo_id_do_cliente_bot_conversa",
              "value": "1537494"
            },
            {
              "name": "id_task_reuniao_ac"
            }
          ]
        },
        "options": {}
      },
      "id": "64b6bb99-8e70-4b08-9732-f5ffbcee850b",
      "name": "dados_do_agendamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1720,
        2240
      ]
    }
  ],
  "pinData": null,
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": false,
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "errorWorkflow": "B5ErT6ObkzMJxzKU",
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v0"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-04T20:40:41.867Z",
  "versionId": "3125a0c1-54b7-463b-b48e-921f2397e4c1"
}